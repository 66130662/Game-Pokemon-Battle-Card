{"ast":null,"code":"var _jsxFileName = \"/Users/arruklibnoy/reac_poke/game-pokemonbattle-ex/pokemon_battle_front/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Game.css\";\nimport backgroundImage from \"../assets/images/P_32.jpg\";\nimport loadingSound from \"../assets/sounds/loadingSound.mp3\";\nimport Modal from \"../components/Modal\";\nimport GameOverModal from \"./GameOverModal\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport fallbackImage from '../assets/fallback-pokemon.png';\nimport BattleResult from './BattleResult';\nimport HistoryModal from './HistoryModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  username,\n  onLogout\n}) => {\n  _s();\n  const [pokemonCards, setPokemonCards] = useState([]);\n  const [playerCard, setPlayerCard] = useState(null);\n  const [opponentCard, setOpponentCard] = useState(null);\n  const [result, setResult] = useState(null);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [roundsPlayed, setRoundsPlayed] = useState(0);\n  const [playerWins, setPlayerWins] = useState(0);\n  const [opponentWins, setOpponentWins] = useState(0);\n  const [history, setHistory] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [playerAttacking, setPlayerAttacking] = useState(false);\n  const [opponentAttacking, setOpponentAttacking] = useState(false);\n  const [playerHit, setPlayerHit] = useState(false);\n  const [opponentHit, setOpponentHit] = useState(false);\n  const [isGameOverModalOpen, setIsGameOverModalOpen] = useState(false);\n  const [totalWins, setTotalWins] = useState(0);\n  const [totalLosses, setTotalLosses] = useState(0);\n  const [totalDraws, setTotalDraws] = useState(0);\n  const [userIds, setUserIds] = useState(null);\n  const [userHistory, setUserHistory] = useState(null);\n  const [isHistoryModalOpen, setIsHistoryModalOpen] = useState(false);\n  const [playerExp, setPlayerExp] = useState(0); // เพิ่ม state สำหรับเก็บ EXP\n  const [playerLevel, setPlayerLevel] = useState(1); // เก็บค่า Level ของผู้เล่น\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    setUserIds(username);\n    if (!username) {\n      alert(\"Please log in before playing the game.\");\n      navigate(\"/login\"); // นำทางไปยังหน้า login\n    }\n  }, [username]);\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"http://13.228.191.168:3001/api/pokemon\");\n        const pokemonList = response.data.map(pokemon => ({\n          name: pokemon.pok_name,\n          type: pokemon.pok_type,\n          hp_base: pokemon.hp_base,\n          attack_base: pokemon.attack_base,\n          defense_base: pokemon.defense_base,\n          speed_base: pokemon.speed_base,\n          image: \"\"\n        }));\n        setPokemonCards(pokemonList);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPokemons();\n    fetchTotalScore();\n  }, []);\n  const fetchTotalScore = async () => {\n    try {\n      const response = await axios.get(`http://13.228.191.168:3001/api/user_wl?user_id=${username}`);\n      const {\n        win,\n        lose,\n        draw\n      } = response.data;\n      setTotalWins(win);\n      setTotalLosses(lose);\n      setTotalDraws(draw);\n    } catch (error) {\n      console.error(\"Error fetching total score:\", error);\n    }\n  };\n  const getRandomCard = () => {\n    if (pokemonCards.length === 0) return null;\n    return pokemonCards[Math.floor(Math.random() * pokemonCards.length)];\n  };\n  const fetchPokemonImage = async pokemonName => {\n    try {\n      const response = await axios.get(`http://13.228.191.168:3001/api/pic_poke?pok_name=${pokemonName}`, {\n        responseType: 'text'\n      });\n      return `data:image/png;base64,${response.data}`;\n    } catch (error) {\n      console.error(\"Error fetching Pokemon image:\", error);\n      return \"\";\n    }\n  };\n  const animateAttack = attacker => {\n    if (attacker === 'player') {\n      setPlayerAttacking(true);\n      setOpponentHit(true);\n      setTimeout(() => {\n        setPlayerAttacking(false);\n        setOpponentHit(false);\n      }, 500);\n    } else {\n      setOpponentAttacking(true);\n      setPlayerHit(true);\n      setTimeout(() => {\n        setOpponentAttacking(false);\n        setPlayerHit(false);\n      }, 500);\n    }\n  };\n  const battle = async (player, opponent) => {\n    let playerHP = player.hp_base;\n    let opponentHP = opponent.hp_base;\n    const playerFirst = player.speed_base >= opponent.speed_base;\n    while (playerHP > 0 && opponentHP > 0) {\n      if (playerFirst) {\n        // Player attacks\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        animateAttack('player');\n        opponentHP -= player.attack_base;\n        if (opponentHP <= 0) return \"player\";\n\n        // Opponent attacks\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        animateAttack('opponent');\n        playerHP -= opponent.attack_base;\n        if (playerHP <= 0) return \"opponent\";\n      } else {\n        // Opponent attacks\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        animateAttack('opponent');\n        playerHP -= opponent.attack_base;\n        if (playerHP <= 0) return \"opponent\";\n\n        // Player attacks\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        animateAttack('player');\n        opponentHP -= player.attack_base;\n        if (opponentHP <= 0) return \"player\";\n      }\n    }\n    return \"tie\";\n  };\n  const saveGameResult = async () => {\n    if (!username) {\n      console.error(\"User ID is missing\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://13.228.191.168:3001/api/save_game_result\", {\n        user_id: username,\n        win: playerWins,\n        lose: opponentWins,\n        draw: roundsPlayed - playerWins - opponentWins,\n        exp: playerExp // เพิ่ม EXP ที่จะบันทึก\n      });\n      if (response.data.success) {\n        console.log(\"Game result and EXP saved successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error saving game result and EXP:\", error);\n    }\n  };\n  const handleRandomize = async () => {\n    if (roundsPlayed >= 5) {\n      await saveGameResult(); // บันทึกผลการเล่นเมื่อเล่นครบ 5 รอบ\n      setIsGameOverModalOpen(true);\n      return;\n    }\n    setIsSpinning(true);\n    const player = getRandomCard();\n    const opponent = getRandomCard();\n    if (!player || !opponent) {\n      alert(\"ไม่สามารถสุ่มโปเกมอนได้ กรุณาลองใหม่อีกครั้ง\");\n      setIsSpinning(false);\n      return;\n    }\n    try {\n      player.image = await fetchPokemonImage(player.name);\n      opponent.image = await fetchPokemonImage(opponent.name);\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n    setPlayerCard({\n      ...player\n    });\n    setOpponentCard({\n      ...opponent\n    });\n    setTimeout(async () => {\n      setIsSpinning(false);\n      const battleResult = await battle(player, opponent);\n      setRoundsPlayed(prev => prev + 1);\n      await saveGameResult();\n      if (battleResult === \"player\") {\n        setResult(\"You Win!\");\n        setPlayerWins(prev => prev + 1);\n        updatePlayerExp(10); // เพิ่ม EXP เมื่อชนะ\n        setHistory(prev => [...prev, `You defeated ${opponent.name}`]);\n      } else if (battleResult === \"opponent\") {\n        setResult(\"You Lose!\");\n        setOpponentWins(prev => prev + 1);\n        updatePlayerExp(5); // เพิ่ม EXP เมื่อแพ้\n        setHistory(prev => [...prev, `You were defeated by ${opponent.name}`]);\n      } else {\n        setResult(\"It's a Tie!\");\n        updatePlayerExp(7); // เพิ่ม EXP เมื่อเสมอ\n        setHistory(prev => [...prev, `Match tied between ${player.name} and ${opponent.name}`]);\n      }\n    }, 2000);\n  };\n  const resetGame = async () => {\n    await saveGameResult(); // บันทึกผลการเล่นก่อนรีเซ็ตเกม\n    setRoundsPlayed(0);\n    setPlayerWins(0);\n    setOpponentWins(0);\n    setHistory([]);\n    setIsGameOverModalOpen(false);\n  };\n  const handleLogout = () => {\n    onLogout();\n    navigate(\"/login\");\n  };\n  const fetchUserHistory = async () => {\n    if (!username) {\n      console.error(\"Username is missing\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://13.228.191.168:3001/api/user_wl?user_id=${username}`);\n      setUserHistory(response.data);\n      setIsHistoryModalOpen(true);\n    } catch (error) {\n      console.error(\"Error fetching user history:\", error);\n      alert(\"Failed to fetch user history. Please try again.\");\n    }\n  };\n  const updatePlayerExp = async expGained => {\n    if (!userIds) {\n      console.error(\"User ID is missing\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://13.228.191.168:3001/api/update_exp_and_level', {\n        user_id: userIds,\n        exp_gained: expGained,\n        current_level: playerLevel\n      });\n      if (response.data.success) {\n        const {\n          new_exp,\n          new_level\n        } = response.data;\n        setPlayerExp(new_exp);\n        setPlayerLevel(new_level);\n        console.log(`EXP gained: ${expGained}. New total: ${new_exp}. New level: ${new_level}`);\n      }\n    } catch (error) {\n      console.error('Error updating exp and level:', error);\n    }\n  };\n  const updatePlayerLevel = async newLevel => {\n    if (!userIds) {\n      console.error(\"User ID is missing\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://13.228.191.168:3001/api/update_level', {\n        user_id: userIds,\n        new_level: newLevel\n      });\n      if (response.data.success) {\n        console.log(`Level updated to ${newLevel}`);\n      }\n    } catch (error) {\n      console.error('Error updating level:', error);\n    }\n  };\n\n  // ฟังก์ชันสำหรับคำนวณการเลเวลอัพ\n  const checkLevelUp = newExp => {\n    const requiredExp = playerLevel * 100; // จำนวน EXP ที่ต้องใช้ในการเลเวลอัพ\n\n    if (newExp >= requiredExp) {\n      setPlayerLevel(prevLevel => prevLevel + 1); // เพิ่มระดับผู้เล่น\n      setPlayerExp(newExp - requiredExp); // หักค่า EXP ที่เกินจากการเลเวลอัพออก\n      alert(`Congratulations! You've leveled up to level ${playerLevel + 1}`);\n      grantRareCard(); // ให้รางวัลเมื่อเลเวลอัพ\n    } else {\n      setPlayerExp(newExp); // อัปเดตค่า EXP ปัจจุบันถ้ายังไม่ถึงเลเวลอัพ\n    }\n  };\n\n  // ฟังก์ชันสำหรับให้รางวัลเป็นการ์ด rare เมื่อผู้เล่นเลเวลอัพ\n  const grantRareCard = () => {\n    const rareCards = pokemonCards.filter(card => card.poke_type_card === 'rare');\n    const normalCards = pokemonCards.filter(card => card.poke_type_card === 'normal');\n\n    // คำนวณโอกาสในการได้รับการ์ด rare ตามเลเวล\n    const rareChance = Math.min(playerLevel * 10, 50); // เพิ่มโอกาส 10% ต่อเลเวล สูงสุด 50%\n\n    const randomNumber = Math.random() * 100;\n    let selectedCard;\n    if (randomNumber < rareChance && rareCards.length > 0) {\n      selectedCard = rareCards[Math.floor(Math.random() * rareCards.length)];\n      alert(`You've received a rare card: ${selectedCard.name}!`);\n    } else if (normalCards.length > 0) {\n      selectedCard = normalCards[Math.floor(Math.random() * normalCards.length)];\n      alert(`You've received a normal card: ${selectedCard.name}!`);\n    }\n    if (selectedCard) {\n      // เพิ่มการ์ดให้กับผู้เล่น หรือจัดเก็บใน inventory ของผู้เล่น\n      // ตัวอย่าง: addCardToInventory(selectedCard);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundImage: `url(${backgroundImage})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      backgroundAttachment: \"fixed\",\n      color: \"white\",\n      textAlign: \"center\",\n      padding: \"5px\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      autoPlay: true,\n      loop: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: loadingSound,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E42\\u0E2B\\u0E25\\u0E14\\u0E42\\u0E1B\\u0E40\\u0E01\\u0E21\\u0E2D\\u0E19...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          style: {\n            position: \"absolute\",\n            top: \"20px\",\n            right: \"20px\",\n            padding: \"20px 20px\",\n            backgroundColor: \"red\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\"\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HistoryModal, {\n          isOpen: isHistoryModalOpen,\n          onClose: () => setIsHistoryModalOpen(false),\n          history: userHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"history-button\",\n          onClick: fetchUserHistory,\n          style: {\n            position: \"absolute\",\n            top: \"20px\",\n            left: \"20px\",\n            padding: \"20px 20px\",\n            backgroundColor: \"blue\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\"\n          },\n          children: \"View History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exp-display\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Experience Points: \", playerExp, \"        |        Level : \", playerLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-comparison\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-title\",\n              children: \"Player Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"vs\",\n              children: \"VS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"computer-title\",\n              children: \"Computer Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: [playerCard && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `pokemon-card ${isSpinning ? \"spin\" : \"\"} ${playerAttacking ? \"attacking\" : \"\"} ${playerHit ? \"hit\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: playerCard.image || fallbackImage,\n                alt: playerCard.name,\n                className: \"pokemon-image\",\n                onError: e => {\n                  const target = e.target;\n                  target.onerror = null;\n                  target.src = fallbackImage;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pokemon-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: playerCard.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Type: \", playerCard.type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"HP: \", playerCard.hp_base]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Attack: \", playerCard.attack_base]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Defense: \", playerCard.defense_base]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Speed: \", playerCard.speed_base]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this), opponentCard && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `pokemon-card ${isSpinning ? \"spin\" : \"\"} ${opponentAttacking ? \"attacking\" : \"\"} ${opponentHit ? \"hit\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: opponentCard.image || fallbackImage,\n                alt: opponentCard.name,\n                className: \"pokemon-image\",\n                onError: e => {\n                  const target = e.target;\n                  target.onerror = null;\n                  target.src = fallbackImage;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pokemon-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: opponentCard.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Type: \", opponentCard.type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"HP: \", opponentCard.hp_base]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Attack: \", opponentCard.attack_base]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Defense: \", opponentCard.defense_base]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Speed: \", opponentCard.speed_base]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"randomize-button\",\n          onClick: handleRandomize,\n          children: \"Randomize Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BattleResult, {\n          result: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scoreboard\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Rounds Played: \", roundsPlayed, \"/5        |        Player Wins: \", playerWins, \"        |        Computer Wins: \", opponentWins, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isModalOpen,\n          onClose: () => setIsModalOpen(false),\n          history: history\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameOverModal, {\n          isOpen: isGameOverModalOpen,\n          onClose: resetGame,\n          playerWins: playerWins,\n          computerWins: opponentWins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"pbfyUBsuo7EZuTfappW4YsjHkd8=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","backgroundImage","loadingSound","Modal","GameOverModal","axios","useNavigate","fallbackImage","BattleResult","HistoryModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","username","onLogout","_s","pokemonCards","setPokemonCards","playerCard","setPlayerCard","opponentCard","setOpponentCard","result","setResult","isSpinning","setIsSpinning","roundsPlayed","setRoundsPlayed","playerWins","setPlayerWins","opponentWins","setOpponentWins","history","setHistory","isModalOpen","setIsModalOpen","loading","setLoading","playerAttacking","setPlayerAttacking","opponentAttacking","setOpponentAttacking","playerHit","setPlayerHit","opponentHit","setOpponentHit","isGameOverModalOpen","setIsGameOverModalOpen","totalWins","setTotalWins","totalLosses","setTotalLosses","totalDraws","setTotalDraws","userIds","setUserIds","userHistory","setUserHistory","isHistoryModalOpen","setIsHistoryModalOpen","playerExp","setPlayerExp","playerLevel","setPlayerLevel","navigate","alert","fetchPokemons","response","get","pokemonList","data","map","pokemon","name","pok_name","type","pok_type","hp_base","attack_base","defense_base","speed_base","image","error","console","fetchTotalScore","win","lose","draw","getRandomCard","length","Math","floor","random","fetchPokemonImage","pokemonName","responseType","animateAttack","attacker","setTimeout","battle","player","opponent","playerHP","opponentHP","playerFirst","Promise","resolve","saveGameResult","post","user_id","exp","success","log","handleRandomize","battleResult","prev","updatePlayerExp","resetGame","handleLogout","fetchUserHistory","expGained","exp_gained","current_level","new_exp","new_level","updatePlayerLevel","newLevel","checkLevelUp","newExp","requiredExp","prevLevel","grantRareCard","rareCards","filter","card","poke_type_card","normalCards","rareChance","min","randomNumber","selectedCard","style","display","flexDirection","justifyContent","alignItems","backgroundSize","backgroundPosition","backgroundAttachment","color","textAlign","padding","height","children","autoPlay","loop","src","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","position","top","right","backgroundColor","border","borderRadius","cursor","isOpen","onClose","left","alt","onError","e","target","onerror","computerWins","_c","$RefreshReg$"],"sources":["/Users/arruklibnoy/reac_poke/game-pokemonbattle-ex/pokemon_battle_front/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Game.css\";\nimport backgroundImage from \"../assets/images/P_32.jpg\";\nimport loadingSound from \"../assets/sounds/loadingSound.mp3\";\nimport Modal from \"../components/Modal\"; \nimport GameOverModal from \"./GameOverModal\";\nimport axios from \"axios\"; \nimport { useNavigate } from \"react-router-dom\";\nimport fallbackImage from '../assets/fallback-pokemon.png';\nimport BattleResult from './BattleResult';\nimport HistoryModal from './HistoryModal';\n\ninterface GameProps {\n  username: string | null;\n  userId: number | null; // เพิ่ม userId ที่เป็น number หรือ null\n  onLogout: () => void;\n}\n\ninterface PokemonCard {\n  name: string;\n  type: string;\n  hp_base: number;\n  attack_base: number;\n  defense_base: number;\n  speed_base: number;\n  image: string;\n  poke_type_card: string; // เพิ่ม property นี้\n}\n\nconst Game: React.FC<GameProps> = ({ username, onLogout }) => {\n  const [pokemonCards, setPokemonCards] = useState<PokemonCard[]>([]);\n  const [playerCard, setPlayerCard] = useState<PokemonCard | null>(null);\n  const [opponentCard, setOpponentCard] = useState<PokemonCard | null>(null);\n  const [result, setResult] = useState<string | null>(null);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [roundsPlayed, setRoundsPlayed] = useState(0);\n  const [playerWins, setPlayerWins] = useState(0);\n  const [opponentWins, setOpponentWins] = useState(0);\n  const [history, setHistory] = useState<string[]>([]);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [playerAttacking, setPlayerAttacking] = useState(false);\n  const [opponentAttacking, setOpponentAttacking] = useState(false);\n  const [playerHit, setPlayerHit] = useState(false);\n  const [opponentHit, setOpponentHit] = useState(false);\n  const [isGameOverModalOpen, setIsGameOverModalOpen] = useState(false);\n  const [totalWins, setTotalWins] = useState(0);\n  const [totalLosses, setTotalLosses] = useState(0);\n  const [totalDraws, setTotalDraws] = useState(0);\n  const [userIds, setUserIds] = useState<string | null>(null);\n  const [userHistory, setUserHistory] = useState<{ win: number, lose: number, draw: number } | null>(null);\n  const [isHistoryModalOpen, setIsHistoryModalOpen] = useState(false);\n  const [playerExp, setPlayerExp] = useState<number>(0); // เพิ่ม state สำหรับเก็บ EXP\n  const [playerLevel, setPlayerLevel] = useState<number>(1); // เก็บค่า Level ของผู้เล่น\n\n\n  \n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setUserIds(username);\n    if (!username) {\n      alert(\"Please log in before playing the game.\");\n      navigate(\"/login\"); // นำทางไปยังหน้า login\n    }\n  }, [username]);\n\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"http://13.228.191.168:3001/api/pokemon\");\n        const pokemonList: PokemonCard[] = response.data.map((pokemon: any) => ({\n          name: pokemon.pok_name,\n          type: pokemon.pok_type,\n          hp_base: pokemon.hp_base,\n          attack_base: pokemon.attack_base,\n          defense_base: pokemon.defense_base,\n          speed_base: pokemon.speed_base,\n          image: \"\",\n        }));\n        setPokemonCards(pokemonList);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPokemons();\n    fetchTotalScore();\n  }, []);\n\n  const fetchTotalScore = async () => {\n    try {\n      const response = await axios.get(`http://13.228.191.168:3001/api/user_wl?user_id=${username}`);\n      const { win, lose, draw } = response.data;\n      setTotalWins(win);\n      setTotalLosses(lose);\n      setTotalDraws(draw);\n    } catch (error) {\n      console.error(\"Error fetching total score:\", error);\n    }\n  };\n\n  const getRandomCard = (): PokemonCard | null => {\n    if (pokemonCards.length === 0) return null;\n    return pokemonCards[Math.floor(Math.random() * pokemonCards.length)];\n  };\n\n  const fetchPokemonImage = async (pokemonName: string): Promise<string> => {\n    try {\n      const response = await axios.get(`http://13.228.191.168:3001/api/pic_poke?pok_name=${pokemonName}`, {\n        responseType: 'text'\n      });\n      return `data:image/png;base64,${response.data}`;\n    } catch (error) {\n      console.error(\"Error fetching Pokemon image:\", error);\n      return \"\";\n    }\n  };\n\n  const animateAttack = (attacker: 'player' | 'opponent') => {\n    if (attacker === 'player') {\n      setPlayerAttacking(true);\n      setOpponentHit(true);\n      setTimeout(() => {\n        setPlayerAttacking(false);\n        setOpponentHit(false);\n      }, 500);\n    } else {\n      setOpponentAttacking(true);\n      setPlayerHit(true);\n      setTimeout(() => {\n        setOpponentAttacking(false);\n        setPlayerHit(false);\n      }, 500);\n    }\n  };\n\n  const battle = async (player: PokemonCard, opponent: PokemonCard): Promise<string> => {\n    let playerHP = player.hp_base;\n    let opponentHP = opponent.hp_base;\n\n    const playerFirst = player.speed_base >= opponent.speed_base;\n\n    while (playerHP > 0 && opponentHP > 0) {\n      if (playerFirst) {\n        // Player attacks\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        animateAttack('player');\n        opponentHP -= player.attack_base;\n        if (opponentHP <= 0) return \"player\";\n\n        // Opponent attacks\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        animateAttack('opponent');\n        playerHP -= opponent.attack_base;\n        if (playerHP <= 0) return \"opponent\";\n      } else {\n        // Opponent attacks\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        animateAttack('opponent');\n        playerHP -= opponent.attack_base;\n        if (playerHP <= 0) return \"opponent\";\n\n        // Player attacks\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        animateAttack('player');\n        opponentHP -= player.attack_base;\n        if (opponentHP <= 0) return \"player\";\n      }\n    }\n    return \"tie\";\n  };\n\n  const saveGameResult = async () => {\n    if (!username) {\n      console.error(\"User ID is missing\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://13.228.191.168:3001/api/save_game_result\", {\n        user_id: username,\n        win: playerWins,\n        lose: opponentWins,\n        draw: roundsPlayed - playerWins - opponentWins,\n        exp: playerExp // เพิ่ม EXP ที่จะบันทึก\n      });\n      if (response.data.success) {\n        console.log(\"Game result and EXP saved successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error saving game result and EXP:\", error);\n    }\n  };\n\n  const handleRandomize = async () => {\n    if (roundsPlayed >= 5) {\n      await saveGameResult(); // บันทึกผลการเล่นเมื่อเล่นครบ 5 รอบ\n      setIsGameOverModalOpen(true);\n      return;\n    }\n    setIsSpinning(true);\n\n    const player = getRandomCard();\n    const opponent = getRandomCard();\n\n\n    \n    if (!player || !opponent) {\n      alert(\"ไม่สามารถสุ่มโปเกมอนได้ กรุณาลองใหม่อีกครั้ง\");\n      setIsSpinning(false);\n      return;\n    }\n\n    try {\n      player.image = await fetchPokemonImage(player.name);\n      opponent.image = await fetchPokemonImage(opponent.name);\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n\n    setPlayerCard({ ...player });\n    setOpponentCard({ ...opponent });\n\n    setTimeout(async () => {\n      setIsSpinning(false);\n      const battleResult = await battle(player, opponent);\n      setRoundsPlayed(prev => prev + 1);\n      await saveGameResult();\n      \n      if (battleResult === \"player\") {\n        setResult(\"You Win!\");\n        setPlayerWins(prev => prev + 1);\n        updatePlayerExp(10); // เพิ่ม EXP เมื่อชนะ\n        setHistory(prev => [...prev, `You defeated ${opponent.name}`]);\n      } else if (battleResult === \"opponent\") {\n        setResult(\"You Lose!\");\n        setOpponentWins(prev => prev + 1);\n        updatePlayerExp(5); // เพิ่ม EXP เมื่อแพ้\n        setHistory(prev => [...prev, `You were defeated by ${opponent.name}`]);\n      } else {\n        setResult(\"It's a Tie!\");\n        updatePlayerExp(7); // เพิ่ม EXP เมื่อเสมอ\n        setHistory(prev => [...prev, `Match tied between ${player.name} and ${opponent.name}`]);\n      }\n    }, 2000);\n  };\n\n  const resetGame = async () => {\n    await saveGameResult(); // บันทึกผลการเล่นก่อนรีเซ็ตเกม\n    setRoundsPlayed(0);\n    setPlayerWins(0);\n    setOpponentWins(0);\n    setHistory([]);\n    setIsGameOverModalOpen(false);\n  };\n\n  const handleLogout = () => {\n    onLogout();\n    navigate(\"/login\");\n  };\n\n  const fetchUserHistory = async () => {\n    if (!username) {\n      console.error(\"Username is missing\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://13.228.191.168:3001/api/user_wl?user_id=${username}`);\n      setUserHistory(response.data);\n      setIsHistoryModalOpen(true);\n    } catch (error) {\n      console.error(\"Error fetching user history:\", error);\n      alert(\"Failed to fetch user history. Please try again.\");\n    }\n  };\n\n  const updatePlayerExp = async (expGained: number) => {\n    if (!userIds) {\n      console.error(\"User ID is missing\");\n      return;\n    }\n  \n    try {\n      const response = await axios.post('http://13.228.191.168:3001/api/update_exp_and_level', {\n        user_id: userIds,\n        exp_gained: expGained,\n        current_level: playerLevel\n      });\n      if (response.data.success) {\n        const { new_exp, new_level } = response.data;\n        setPlayerExp(new_exp);\n        setPlayerLevel(new_level);\n        console.log(`EXP gained: ${expGained}. New total: ${new_exp}. New level: ${new_level}`);\n      }\n    } catch (error) {\n      console.error('Error updating exp and level:', error);\n    }\n  };\n\n  const updatePlayerLevel = async (newLevel: number) => {\n    if (!userIds) {\n      console.error(\"User ID is missing\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://13.228.191.168:3001/api/update_level', {\n        user_id: userIds,\n        new_level: newLevel\n      });\n      if (response.data.success) {\n        console.log(`Level updated to ${newLevel}`);\n      }\n    } catch (error) {\n      console.error('Error updating level:', error);\n    }\n  };\n\n  // ฟังก์ชันสำหรับคำนวณการเลเวลอัพ\n  const checkLevelUp = (newExp: number) => {\n    const requiredExp = playerLevel * 100; // จำนวน EXP ที่ต้องใช้ในการเลเวลอัพ\n  \n    if (newExp >= requiredExp) {\n      setPlayerLevel(prevLevel => prevLevel + 1); // เพิ่มระดับผู้เล่น\n      setPlayerExp(newExp - requiredExp); // หักค่า EXP ที่เกินจากการเลเวลอัพออก\n      alert(`Congratulations! You've leveled up to level ${playerLevel + 1}`);\n      grantRareCard(); // ให้รางวัลเมื่อเลเวลอัพ\n    } else {\n      setPlayerExp(newExp); // อัปเดตค่า EXP ปัจจุบันถ้ายังไม่ถึงเลเวลอัพ\n    }\n  };\n  \n  // ฟังก์ชันสำหรับให้รางวัลเป็นการ์ด rare เมื่อผู้เล่นเลเวลอัพ\n  const grantRareCard = () => {\n    const rareCards = pokemonCards.filter(card => card.poke_type_card === 'rare');\n    const normalCards = pokemonCards.filter(card => card.poke_type_card === 'normal');\n  \n    // คำนวณโอกาสในการได้รับการ์ด rare ตามเลเวล\n    const rareChance = Math.min(playerLevel * 10, 50); // เพิ่มโอกาส 10% ต่อเลเวล สูงสุด 50%\n    \n    const randomNumber = Math.random() * 100;\n  \n    let selectedCard;\n    if (randomNumber < rareChance && rareCards.length > 0) {\n      selectedCard = rareCards[Math.floor(Math.random() * rareCards.length)];\n      alert(`You've received a rare card: ${selectedCard.name}!`);\n    } else if (normalCards.length > 0) {\n      selectedCard = normalCards[Math.floor(Math.random() * normalCards.length)];\n      alert(`You've received a normal card: ${selectedCard.name}!`);\n    }\n  \n    if (selectedCard) {\n      // เพิ่มการ์ดให้กับผู้เล่น หรือจัดเก็บใน inventory ของผู้เล่น\n      // ตัวอย่าง: addCardToInventory(selectedCard);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundAttachment: \"fixed\",\n        color: \"white\",\n        textAlign: \"center\",\n        padding: \"5px\",\n        height: \"100vh\",\n      }}\n    >\n      <audio autoPlay loop>\n        <source src={loadingSound} type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n\n      <div className=\"game-container\">\n        {loading ? (\n          <h2>กำลังโหลดโปเกมอน...</h2>\n        ) : (\n          <>\n            <button\n              className=\"logout-button\"\n              onClick={handleLogout}\n              style={{\n                position: \"absolute\",\n                top: \"20px\",\n                right: \"20px\",\n                padding: \"20px 20px\",\n                backgroundColor: \"red\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n              }}\n            >\n              Logout\n            </button>\n            <HistoryModal\n              isOpen={isHistoryModalOpen}\n              onClose={() => setIsHistoryModalOpen(false)}\n              history={userHistory}\n            />\n            <button\n  className=\"history-button\"\n  onClick={fetchUserHistory}\n  style={{\n    position: \"absolute\",\n    top: \"20px\",\n    left: \"20px\",\n    padding: \"20px 20px\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n  }}\n>\n  View History\n</button>\n            <div className=\"exp-display\">\n              <h3>Experience Points: {playerExp}        |        Level : {playerLevel}</h3>\n            </div>\n            <div className=\"card-comparison\">\n              <div className=\"card-title\">\n                <span className=\"player-title\">Player Card</span>\n                <span className=\"vs\">VS</span>\n                <span className=\"computer-title\">Computer Card</span>\n              </div>\n              <div className=\"card-container\">\n                {playerCard && (\n                  <div className={`pokemon-card ${isSpinning ? \"spin\" : \"\"} ${playerAttacking ? \"attacking\" : \"\"} ${playerHit ? \"hit\" : \"\"}`}>\n                    <img\n                      src={playerCard.image || fallbackImage}\n                      alt={playerCard.name}\n                      className=\"pokemon-image\"\n                      onError={(e) => {\n                        const target = e.target as HTMLImageElement;\n                        target.onerror = null;\n                        target.src = fallbackImage;\n                      }}\n                    />\n                    <div className=\"pokemon-details\">\n                      <h3>{playerCard.name}</h3>\n                      <p>Type: {playerCard.type}</p>\n                      <p>HP: {playerCard.hp_base}</p>\n                      <p>Attack: {playerCard.attack_base}</p>\n                      <p>Defense: {playerCard.defense_base}</p>\n                      <p>Speed: {playerCard.speed_base}</p>\n                    </div>\n                  </div>\n                )}\n\n                {opponentCard && (\n                  <div className={`pokemon-card ${isSpinning ? \"spin\" : \"\"} ${opponentAttacking ? \"attacking\" : \"\"} ${opponentHit ? \"hit\" : \"\"}`}>\n                    <img\n                      src={opponentCard.image || fallbackImage}\n                      alt={opponentCard.name}\n                      className=\"pokemon-image\"\n                      onError={(e) => {\n                        const target = e.target as HTMLImageElement;\n                        target.onerror = null;\n                        target.src = fallbackImage;\n                      }}\n                    />\n                    <div className=\"pokemon-details\">\n                      <h3>{opponentCard.name}</h3>\n                      <p>Type: {opponentCard.type}</p>\n                      <p>HP: {opponentCard.hp_base}</p>\n                      <p>Attack: {opponentCard.attack_base}</p>\n                      <p>Defense: {opponentCard.defense_base}</p>\n                      <p>Speed: {opponentCard.speed_base}</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <button className=\"randomize-button\" onClick={handleRandomize}>\n              Randomize Cards\n            </button>\n\n            <BattleResult result={result} />\n\n            <div className=\"scoreboard\">\n              <h3>Rounds Played: {roundsPlayed}/5        |        Player Wins: {playerWins}        |        Computer Wins: {opponentWins} </h3>\n            </div>\n\n            <Modal\n              isOpen={isModalOpen}\n              onClose={() => setIsModalOpen(false)}\n              history={history}\n            />\n\n            <GameOverModal\n              isOpen={isGameOverModalOpen}\n              onClose={resetGame}\n              playerWins={playerWins}\n              computerWins={opponentWins}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}